---
apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: {{ include "ms-demo-tekton.fullname" . }}-kaniko
spec:
  params:
    - name: DOCKERFILE
      description: Path to the Dockerfile to build.
      default: ./Dockerfile
    - name: CONTEXT
      description: The build context used by Kaniko.
      default: ./
    - name: EXTRA_ARGS
      default: ""
    - name: BUILDER_IMAGE
      description: The image on which builds will run
      default: gcr.io/kaniko-project/executor:v1.2.0
    - name: CACHE
      description: Use cache when building a new image, some containers fail if cache is used
  resources:
    inputs:
    - name: source
      type: git
    outputs:
    - name: image
      type: image

  steps:
  - name: build-and-push
    workingDir: /workspace/source
    image: $(params.BUILDER_IMAGE)
    # specifying DOCKER_CONFIG is required to allow kaniko to detect docker credential
    # https://github.com/tektoncd/pipeline/pull/706
    env:
    - name: DOCKER_CONFIG
      value: /tekton/home/.docker
    command:
    - /kaniko/executor
    - $(params.EXTRA_ARGS)
    - --dockerfile=$(params.DOCKERFILE)
    - --context=/workspace/source/$(params.CONTEXT)  # The user does not need to care the workspace and the source.
    - --destination=$(resources.outputs.image.url)
    - --cache=$(params.CACHE)
    # just for dockerhub - it cannot handle chaches (subrepos): The repo/cache naming should work on all registries except Docker Hub
    # https://github.com/GoogleContainerTools/kaniko/issues/524
    - --cache-repo=zkegli/demo-cache
    securityContext:
      runAsUser: 0
---
apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: {{ include "ms-demo-tekton.fullname" . }}-update-commit-id
spec:
  volumes:
  - name: argocd-secret
    secret:
      secretName: $(inputs.params.ArgoCdSecret)

  params:
    - name: ArgoURL
      description: "The URL of the ArgoCD server"
    - name: ArgoCdSecret
      description: "The secret containing the username and password for the tekton task to connect to argo"
    - name: CommitID
      description: "The commit ID to update"
    - name: AppName
      description: "The name of the argo app to update"
  steps:
  - name: update-commit-id
    image: argoproj/argocd
    volumeMounts:
    - name: argocd-secret
      mountPath: /var/secret
    command:
    - sh
    args:
    - -ce
    - |
      set -e
      echo "update commit id"
      argocd login $(params.ArgoURL) --username $(/bin/cat /var/secret/username) --password $(/bin/cat /var/secret/password)
      argocd app set $(params.AppName) -p image.tag=$(params.CommitID)
